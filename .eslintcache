[{"D:\\OneDrive - hdu.edu.cn\\git\\reactLearnArea\\todolist\\src\\reportWebVitals.js":"1","D:\\OneDrive - hdu.edu.cn\\git\\reactLearnArea\\todolist\\src\\App.js":"2","D:\\OneDrive - hdu.edu.cn\\git\\reactLearnArea\\todolist\\src\\index.js":"3","D:\\OneDrive - hdu.edu.cn\\git\\reactLearnArea\\todolist\\src\\components\\Todo.js":"4","D:\\OneDrive - hdu.edu.cn\\git\\reactLearnArea\\todolist\\src\\components\\Form.js":"5","D:\\OneDrive - hdu.edu.cn\\git\\recactLaptop\\reactTolist\\src\\index.js":"6","D:\\OneDrive - hdu.edu.cn\\git\\recactLaptop\\reactTolist\\src\\components\\Form.js":"7","D:\\OneDrive - hdu.edu.cn\\git\\recactLaptop\\reactTolist\\src\\App.js":"8","D:\\OneDrive - hdu.edu.cn\\git\\recactLaptop\\reactTolist\\src\\components\\Todo.js":"9","D:\\OneDrive - hdu.edu.cn\\git\\recactLaptop\\reactTolist\\src\\components\\FilterButton.js":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":858,"mtime":1606742042604,"results":"13","hashOfConfig":"12"},{"size":519,"mtime":1606635809336,"results":"14","hashOfConfig":"12"},{"size":702,"mtime":1606724118841,"results":"15","hashOfConfig":"12"},{"size":629,"mtime":1606742263135,"results":"16","hashOfConfig":"12"},{"size":710,"mtime":1606802958861,"results":"17","hashOfConfig":"18"},{"size":875,"mtime":1606807843670,"results":"19","hashOfConfig":"18"},{"size":1945,"mtime":1607053318039,"results":"20","hashOfConfig":"18"},{"size":2283,"mtime":1607055761456,"results":"21","hashOfConfig":"18"},{"size":339,"mtime":1606802958856,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m5mf6w",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ucgixt",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\OneDrive - hdu.edu.cn\\git\\reactLearnArea\\todolist\\src\\reportWebVitals.js",[],"D:\\OneDrive - hdu.edu.cn\\git\\reactLearnArea\\todolist\\src\\App.js",[],"D:\\OneDrive - hdu.edu.cn\\git\\reactLearnArea\\todolist\\src\\index.js",[],"D:\\OneDrive - hdu.edu.cn\\git\\reactLearnArea\\todolist\\src\\components\\Todo.js",[],"D:\\OneDrive - hdu.edu.cn\\git\\reactLearnArea\\todolist\\src\\components\\Form.js",[],"D:\\OneDrive - hdu.edu.cn\\git\\recactLaptop\\reactTolist\\src\\index.js",[],"D:\\OneDrive - hdu.edu.cn\\git\\recactLaptop\\reactTolist\\src\\components\\Form.js",[],"D:\\OneDrive - hdu.edu.cn\\git\\recactLaptop\\reactTolist\\src\\App.js",["45"],"import { useState } from 'react';\r\nimport Todo from './components/Todo';\r\nimport Form from './components/Form';\r\nimport FilterButton from './components/FilterButton';\r\nimport { nanoid } from 'nanoid';\r\n\r\nfunction App(props) {\r\n  const [tasks, setTasks] = useState(props.tasks);\r\n  function toggleTaskCompleted(id) {\r\n    const updatedTasks = tasks.map((task) => {\r\n      if (task.id === id) {\r\n        return { ...task, completed: !task.completed };\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(updatedTasks);\r\n  }\r\n  function deleteTask(id) {\r\n    const remainingTasks = tasks.filter((task) => id !== task.id);\r\n    setTasks(remainingTasks);\r\n  }\r\n  function editTask(id, newName) {\r\n    const editedTaskList = tasks.map((task) => {\r\n      if ((id = task.id)) {\r\n        return { ...task, name: newName };\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(editedTaskList);\r\n  }\r\n  const taskList = tasks.map((task) => (\r\n    <Todo\r\n      id={task.id}\r\n      name={task.name}\r\n      completed={task.completed}\r\n      key={task.id}\r\n      toggleTaskCompleted={toggleTaskCompleted}\r\n      deleteTask={deleteTask}\r\n      editTask={editTask}\r\n    />\r\n  ));\r\n  const tasksNoun = taskList.length !== 1 ? 'task' : 'tasks';\r\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\r\n  function addTask(name) {\r\n    const newTask = { id: 'todo' + nanoid(), name, completed: false };\r\n    setTasks([...tasks, newTask]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"todoapp stack-large\">\r\n      <h1>TodoMatic</h1>\r\n      <Form addTask={addTask} />\r\n      <div className=\"filters btn-group stack-exception\">\r\n        <FilterButton />\r\n        <FilterButton />\r\n        <FilterButton />\r\n      </div>\r\n      <h2 id=\"list-heading\">{headingText}</h2>\r\n      <ul\r\n        className=\"todo-list stack-large stack-exception\"\r\n        aria-labelledby=\"list-heading\"\r\n      >\r\n        {taskList}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","D:\\OneDrive - hdu.edu.cn\\git\\recactLaptop\\reactTolist\\src\\components\\Todo.js",["46"],"import React, { useState } from 'react';\r\nexport default function Todo(props) {\r\n  const [newName, setNewName] = useState('');\r\n  function handleChange(e) {\r\n    setNewName(e.target.value);\r\n  }\r\n  function handleSubmi(e) {\r\n    e.preventDefault();\r\n    props.editTask(props.id, newName);\r\n    setNewName('');\r\n    setEditing(false)\r\n  }\r\n  const [isEditing, setEditing] = useState(false);\r\n  const editingTemplate = (\r\n    <form className=\"stack-small\">\r\n      <div className=\"form-group\">\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          New name for {props.name}\r\n        </label>\r\n        <input\r\n          id={props.id}\r\n          className=\"todo-text\"\r\n          type=\"text\"\r\n          value={newName}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button type=\"button\" className=\"btn todo-cancel\">\r\n          Cancel\r\n          <span className=\"visually-hidden\" onClick={() => setEditing(false)}>\r\n            renaming {props.name}\r\n          </span>\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n          Save\r\n          <span className=\"visually-hidden\">new name for {props.name}</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n  const viewTemplate = (\r\n    <div className=\"stack-small\">\r\n      <div className=\"c-cb\">\r\n        <input\r\n          id={props.id}\r\n          type=\"checkbox\"\r\n          defaultChecked={props.completed}\r\n          onChange={() => props.toggleTaskCompleted(props.id)}\r\n        />\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          {props.name}\r\n        </label>\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button type=\"button\" className=\"btn\">\r\n          Edit{' '}\r\n          <span className=\"visually-hidden\" onClick={() => setEditing(true)}>\r\n            {props.name}\r\n          </span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn__danger\"\r\n          onClick={() => props.deleteTask(props.id)}\r\n        >\r\n          Delete <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <li className=\"todo \">{isEditing ? editingTemplate : viewTemplate} </li>\r\n  );\r\n}\r\n","D:\\OneDrive - hdu.edu.cn\\git\\recactLaptop\\reactTolist\\src\\components\\FilterButton.js",[],{"ruleId":null,"fatal":true,"severity":2,"message":"47","line":39,"column":16},{"ruleId":"48","severity":1,"message":"49","line":7,"column":12,"nodeType":"50","messageId":"51","endLine":7,"endColumn":23},"Parsing error: JSX attributes must only be assigned a non-empty expression\n\n  37 |       toggleTaskCompleted={toggleTaskCompleted}\n  38 |       deleteTask={deleteTask}\n> 39 |       editTask={}\n     |                ^\n  40 |     />\n  41 |   ));\n  42 |   const tasksNoun = taskList.length !== 1 ? 'task' : 'tasks';","no-unused-vars","'handleSubmi' is defined but never used.","Identifier","unusedVar"]